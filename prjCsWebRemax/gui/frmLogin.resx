<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5+WkoikhAAAAAElFTkSuQmCC
</value>
  </data>
</root>